{"version":3,"sources":["webpack:///webpack/bootstrap c1e09f765e5ee1525ee1","webpack:///external \"chalk\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"seamless-immutable\"","webpack:///./kit/entry/server_dev.js","webpack:///./config/paths.js","webpack:///./config/project.js","webpack:///./kit/entry/server.js","webpack:///./kit/lib/apollo.js","webpack:///./kit/lib/console.js","webpack:///./kit/lib/env.js","webpack:///./kit/lib/redux.js","webpack:///./kit/views/ssr.js","webpack:///./reducers/counter.js","webpack:///external \"boxen\"","webpack:///external \"ip\"","webpack:///external \"isomorphic-fetch\"","webpack:///external \"koa\"","webpack:///external \"koa-helmet\"","webpack:///external \"koa-router\"","webpack:///external \"koa-send\"","webpack:///external \"microseconds\"","webpack:///external \"path\"","webpack:///external \"prop-types\"","webpack:///external \"react-dom/server\"","webpack:///external \"react-helmet\"","webpack:///external \"react-router\"","webpack:///external \"redux\"","webpack:///external \"redux-thunk\""],"names":["HOST","PORT","css","scripts","map","key","then","router","app","get","use","routes","allowedMethods","listen","host","port","type","chalk","bgYellow","black","path","require","root","join","__dirname","module","exports","kit","entry","webpack","views","src","static","dist","distDev","resolve","public","APOLLO","uri","BUNDLE_ANALYZER","openAnalyzer","staticMiddleware","createReactHandler","staticMiddlewareHandler","ctx","next","immutable","e","chunkManifest","reactHandler","routeContext","client","store","components","request","url","html","renderToString","includes","status","redirect","body","renderToStaticMarkup","rewind","webpackManifest","__STATE__","getState","server","res","statusCode","console","log","message","start","now","end","parse","since","total","microseconds","milliseconds","seconds","set","browserClient","serverClient","networkInterface","createClient","opt","Object","assign","reduxRootSelector","state","apollo","ssrMode","logServerStarted","green","bold","localURL","address","err","padding","borderColor","margin","getHost","getServerHost","getBrowserHost","getPort","getBrowserPort","getServerPort","getURL","defaultHost","defaultPorts","production","development","browser","isProduction","isServer","getStub","getBrowserStub","getServerStub","process","env","createNewStore","hasState","window","reducers","unwind","reducer","r","concat","arr","keys","apolloClient","middleware","__REDUX_DEVTOOLS_EXTENSION__","f","Html","head","meta","toComponent","title","__html","reduce","out","JSON","stringify","propTypes","object","isRequired","string","arrayOf","initialState","count","counter","action","merge"],"mappings":"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","file":"server_dev.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 30);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c1e09f765e5ee1525ee1","module.exports = require(\"chalk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chalk\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"react-apollo\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-apollo\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"seamless-immutable\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"seamless-immutable\"\n// module id = 3\n// module chunks = 0","/* eslint-disable no-console */\r\n\r\n// Production server entry point.  Spawns the server on default HOST:PORT\r\n\r\n// ----------------------\r\n// IMPORTS\r\n\r\n/* NPM */\r\n\r\n// Chalk terminal library\r\nimport chalk from 'chalk';\r\n\r\n/* Local */\r\n\r\n// Local environment\r\nimport { getHost, getPort } from 'kit/lib/env';\r\n\r\n// Import console messages\r\nimport { logServerStarted } from 'kit/lib/console';\r\n\r\n// Extend the server base\r\nimport server, { createReactHandler, staticMiddleware } from './server';\r\n\r\n// ----------------------\r\n\r\n// Host and port -- from the environment\r\nconst HOST = getHost();\r\nconst PORT = getPort();\r\n\r\n// Get manifest values\r\nconst css = '/assets/css/style.css';\r\nconst scripts = [\r\n  'vendor.js',\r\n  'browser.js'].map(key => `/${key}`);\r\n\r\n// Spawn the server\r\nserver.then(({ router, app }) => {\r\n  // Create proxy to tunnel requests to the browser `webpack-dev-server`\r\n  router.get('/*', createReactHandler(css, scripts));\r\n\r\n  // Connect the development routes to the server\r\n  app\r\n    .use(staticMiddleware())\r\n    .use(router.routes())\r\n    .use(router.allowedMethods());\r\n\r\n  app.listen({ host: HOST, port: PORT }, () => {\r\n    logServerStarted({\r\n      type: 'server-side rendering',\r\n      host: HOST,\r\n      port: PORT,\r\n      chalk: chalk.bgYellow.black,\r\n    });\r\n  });\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./kit/entry/server_dev.js","// ----------------------\r\n// IMPORTS\r\n\r\nconst path = require('path');\r\n\r\n// ----------------------\r\n\r\n// Parent folder = project root\r\nconst root = path.join(__dirname, '..');\r\n\r\nmodule.exports = {\r\n  // Root project folder.  This is the current dir.\r\n  root,\r\n\r\n  // Kit.  ReactQL starter kit code.  You can edit these files, but be\r\n  // aware that upgrading your starter kit could overwrite them\r\n  kit: path.join(root, 'kit'),\r\n\r\n  // Entry points.  This is where webpack will look for our browser.js,\r\n  // server.js and vendor.js files to start building\r\n  entry: path.join(root, 'kit', 'entry'),\r\n\r\n  // Webpack configuration files\r\n  webpack: path.join(root, 'kit', 'webpack'),\r\n\r\n  // Views for internal use\r\n  views: path.join(root, 'kit', 'views'),\r\n\r\n  // Source path; where we'll put our application files\r\n  src: path.join(root, 'src'),\r\n\r\n  // Static files.  HTML, images, etc that can be processed by Webpack\r\n  // before being moved into the final `dist` folder\r\n  static: path.join(root, 'static'),\r\n\r\n  // Dist path; where bundled assets will wind up\r\n  dist: path.join(root, 'dist'),\r\n\r\n  // Dist path for development; where dev assets will wind up\r\n  distDev: path.resolve(root, 'dist', 'dev'),\r\n\r\n  // Public.  This is where our web server will start looking to serve\r\n  // static files from\r\n  public: path.join(root, 'dist', 'public'),\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./config/paths.js","/* eslint-disable import/prefer-default-export */\r\n\r\nexport const APOLLO = {\r\n  uri: 'https://api.graph.cool/simple/v1/cinomw2r1018601o42x5z69uc',\r\n};\r\n\r\nexport const BUNDLE_ANALYZER = {\r\n  openAnalyzer: false,\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./config/project.js","/* eslint-disable no-param-reassign, no-console */\r\n\r\n// Server entry point, for Webpack.  This will spawn a Koa web server\r\n// and listen for HTTP requests.  Clients will get a return render of React\r\n// or the file they have requested\r\n//\r\n// Note:  No HTTP optimisation is performed here (gzip, http/2, etc).  Node.js\r\n// will nearly always be slower than Nginx or an equivalent, dedicated proxy,\r\n// so it's usually better to leave that stuff to a faster upstream provider\r\n\r\n// ----------------------\r\n// IMPORTS\r\n\r\n/* NPM */\r\n\r\n// Patch global.`fetch` so that Apollo calls to GraphQL work\r\nimport 'isomorphic-fetch';\r\n\r\n// React UI\r\nimport React from 'react';\r\n\r\n// React utility to transform JSX to HTML (to send back to the client)\r\nimport ReactDOMServer from 'react-dom/server';\r\n\r\n// Koa 2 web server.  Handles incoming HTTP requests, and will serve back\r\n// the React render, or any of the static assets being compiled\r\nimport Koa from 'koa';\r\n\r\n// Apollo tools to connect to a GraphQL server.  We'll grab the\r\n// `ApolloProvider` HOC component, which will inject any 'listening' React\r\n// components with GraphQL data props.  We'll also use `getDataFromTree`\r\n// to await data being ready before rendering back HTML to the client\r\nimport { ApolloProvider, getDataFromTree } from 'react-apollo';\r\n\r\n// Static file handler\r\nimport koaSend from 'koa-send';\r\n\r\n// HTTP header hardening\r\nimport koaHelmet from 'koa-helmet';\r\n\r\n// Koa Router, for handling URL requests\r\nimport KoaRouter from 'koa-router';\r\n\r\n// High-precision timing, so we can debug response time to serve a request\r\nimport ms from 'microseconds';\r\n\r\n// React Router HOC for figuring out the exact React hierarchy to display\r\n// based on the URL\r\nimport { StaticRouter } from 'react-router';\r\n\r\n// <Helmet> component for retrieving <head> section, so we can set page\r\n// title, meta info, etc along with the initial HTML\r\nimport Helmet from 'react-helmet';\r\n\r\n/* Local */\r\n\r\n// Grab the shared Apollo Client\r\nimport { serverClient } from 'kit/lib/apollo';\r\n\r\n// Custom redux store creator.  This will allow us to create a store 'outside'\r\n// of Apollo, so we can apply our own reducers and make use of the Redux dev\r\n// tools in the browser\r\nimport createNewStore from 'kit/lib/redux';\r\n\r\n// Initial view to send back HTML render\r\nimport Html from 'kit/views/ssr';\r\n\r\n// App entry point\r\nimport App from 'src/app';\r\n\r\n// Import paths.  We'll use this to figure out where our public folder is\r\n// so we can serve static files\r\nimport PATHS from 'config/paths';\r\n\r\n// ----------------------\r\n\r\n// Static file middleware\r\nexport function staticMiddleware() {\r\n  return async function staticMiddlewareHandler(ctx, next) {\r\n    try {\r\n      if (ctx.path !== '/') {\r\n        return await koaSend(\r\n          ctx,\r\n          ctx.path,\r\n          process.env.NODE_ENV === 'production' ? {\r\n            root: PATHS.public,\r\n            immutable: true,\r\n          } : {\r\n            root: PATHS.distDev,\r\n          },\r\n        );\r\n      }\r\n    } catch (e) { /* Errors will fall through */ }\r\n    return next();\r\n  };\r\n}\r\n\r\n// Function to create a React handler, per the environment's correct\r\n// manifest files\r\nexport function createReactHandler(css = [], scripts = [], chunkManifest = {}) {\r\n  return async function reactHandler(ctx) {\r\n    const routeContext = {};\r\n\r\n    // Create a new server Apollo client for this request\r\n    const client = serverClient();\r\n\r\n    // Create a new Redux store for this request\r\n    const store = createNewStore(client);\r\n\r\n    // Generate the HTML from our React tree.  We're wrapping the result\r\n    // in `react-router`'s <StaticRouter> which will pull out URL info and\r\n    // store it in our empty `route` object\r\n    const components = (\r\n      <StaticRouter location={ctx.request.url} context={routeContext}>\r\n        <ApolloProvider store={store} client={client}>\r\n          <App />\r\n        </ApolloProvider>\r\n      </StaticRouter>\r\n    );\r\n\r\n    // Wait for GraphQL data to be available in our initial render,\r\n    // before dumping HTML back to the client\r\n    await getDataFromTree(components);\r\n\r\n    // Full React HTML render\r\n    const html = ReactDOMServer.renderToString(components);\r\n\r\n    // Handle redirects\r\n    if ([301, 302].includes(routeContext.status)) {\r\n      // 301 = permanent redirect, 302 = temporary\r\n      ctx.status = routeContext.status;\r\n\r\n      // Issue the new `Location:` header\r\n      ctx.redirect(routeContext.url);\r\n\r\n      // Return early -- no need to set a response body\r\n      return;\r\n    }\r\n\r\n    // Handle 404 Not Found\r\n    if (routeContext.status === 404) {\r\n      // By default, just set the status code to 404.  You can add your\r\n      // own custom logic here, if you want to redirect to a permanent\r\n      // 404 route or set a different response on `ctx.body`\r\n      ctx.status = routeContext.status;\r\n    }\r\n\r\n    // Render the view with our injected React data.  We'll pass in the\r\n    // Helmet component to generate the <head> tag, as well as our Redux\r\n    // store state so that the browser can continue from the server\r\n    ctx.body = `<!DOCTYPE html>\\n${ReactDOMServer.renderToStaticMarkup(\r\n      <Html\r\n        html={html}\r\n        head={Helmet.rewind()}\r\n        window={{\r\n          webpackManifest: chunkManifest,\r\n          __STATE__: store.getState(),\r\n        }}\r\n        css={css}\r\n        scripts={scripts} />,\r\n    )}`;\r\n  };\r\n}\r\n\r\n// Run the server\r\nexport default (async function server() {\r\n  return {\r\n    router: (new KoaRouter())\r\n      // Set-up a general purpose /ping route to check the server is alive\r\n      .get('/ping', async ctx => {\r\n        ctx.body = 'pong';\r\n      })\r\n\r\n      // Favicon.ico.  By default, we'll serve this as a 204 No Content.\r\n      // If /favicon.ico is available as a static file, it'll try that first\r\n      .get('/favicon.ico', async ctx => {\r\n        ctx.res.statusCode = 204;\r\n      }),\r\n    app: new Koa()\r\n\r\n      // Preliminary security for HTTP headers\r\n      .use(koaHelmet())\r\n\r\n      // Error wrapper.  If an error manages to slip through the middleware\r\n      // chain, it will be caught and logged back here\r\n      .use(async (ctx, next) => {\r\n        try {\r\n          await next();\r\n        } catch (e) {\r\n          // TODO we've used rudimentary console logging here.  In your own\r\n          // app, I'd recommend you implement third-party logging so you can\r\n          // capture errors properly\r\n          console.log('Error', e.message);\r\n          ctx.body = 'There was an error. Please try again later.';\r\n        }\r\n      })\r\n\r\n      // It's useful to see how long a request takes to respond.  Add the\r\n      // timing to a HTTP Response header\r\n      .use(async (ctx, next) => {\r\n        const start = ms.now();\r\n        await next();\r\n        const end = ms.parse(ms.since(start));\r\n        const total = end.microseconds + (end.milliseconds * 1e3) + (end.seconds * 1e6);\r\n        ctx.set('Response-Time', `${total / 1e3}ms`);\r\n      }),\r\n  };\r\n}());\r\n\n\n\n// WEBPACK FOOTER //\n// ./kit/entry/server.js","// ----------------------\r\n// IMPORTS\r\n\r\n// Apollo client library\r\nimport { createNetworkInterface, ApolloClient } from 'react-apollo';\r\n\r\n// Custom configuration/settings\r\nimport { APOLLO } from 'config/project';\r\n\r\n// ----------------------\r\n\r\n// Create a new Apollo network interface, to point to our API server.\r\n// Note:  By default in this kit, we'll connect to a sample endpoint that\r\n// repsonds with simple messages.  Update [root]/config.js as needed.\r\nconst networkInterface = createNetworkInterface({\r\n  uri: APOLLO.uri,\r\n});\r\n\r\n// Helper function to create a new Apollo client, by merging in\r\n// passed options alongside the defaults\r\nfunction createClient(opt = {}) {\r\n  return new ApolloClient(Object.assign({\r\n    reduxRootSelector: state => state.apollo,\r\n    networkInterface,\r\n  }, opt));\r\n}\r\n\r\n// Creates a new browser client\r\nexport function browserClient() {\r\n  return createClient();\r\n}\r\n\r\n// Creates a new server-side client\r\nexport function serverClient() {\r\n  return createClient({\r\n    ssrMode: true,\r\n  });\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/apollo.js","/* eslint-disable import/prefer-default-export, no-console */\r\n\r\n\r\n// ----------------------\r\n// IMPORTS\r\n\r\n/* NPM */\r\n\r\n// Display a border around a message\r\nimport boxen from 'boxen';\r\n\r\n// Chalk library, to add colour to our console logs\r\nimport chalk from 'chalk';\r\n\r\n// IP library, for determining the local network interface\r\nimport ip from 'ip';\r\n\r\n// ----------------------\r\n\r\nexport function logServerStarted(opt = {}) {\r\n  let message = chalk.green(`Running ${(opt.chalk || chalk.bold)(opt.type)} in ${chalk.bold(process.env.NODE_ENV)} mode\\n\\n`);\r\n\r\n  const localURL = `http://${opt.host}:${opt.port}`;\r\n  message += `- ${chalk.bold('Local:           ')} ${localURL}`;\r\n\r\n  try {\r\n    const url = `http://${ip.address()}:${opt.port}`;\r\n    message += `\\n- ${chalk.bold('On Your Network: ')} ${url}`;\r\n  } catch (err) { /* ignore errors */ }\r\n\r\n  console.log(\r\n    boxen(message, {\r\n      padding: 1,\r\n      borderColor: 'green',\r\n      margin: 1,\r\n    }),\r\n  );\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/console.js","// Environment-aware functions\r\n\r\n// Default host that any server should bind to.  This is generally just\r\n// 'localhost', for all server types\r\nconst defaultHost = 'localhost';\r\n\r\n// Default ports.  Various modes (development, production) and various server\r\n// types (browser, server, static) are catered for\r\nconst defaultPorts = {\r\n  production: {\r\n    server: 4000,\r\n  },\r\n  development: {\r\n    browser: 8080,\r\n    server: 8081,\r\n  },\r\n};\r\n\r\n// Determines whether we're currently running in production\r\nconst isProduction = process.env.NODE_ENV === 'production';\r\nconst isServer = typeof SERVER !== 'undefined' && SERVER;\r\n\r\n// Returns the prefix of the variable on `process.env` that determines\r\n// whether we're running in server or browser mode, and in production or dev\r\nfunction getStub() {\r\n  return `${isServer ? 'SERVER' : 'BROWSER'}_${isProduction ? 'PROD' : 'DEV'}`;\r\n}\r\n\r\n// Get browser stub\r\nfunction getBrowserStub() {\r\n  return `BROWSER_${isProduction ? 'PROD' : 'DEV'}`;\r\n}\r\n\r\n// Get server stub\r\nfunction getServerStub() {\r\n  return `SERVER_${isProduction ? 'PROD' : 'DEV'}`;\r\n}\r\n\r\n// Get the hostname for the server, based on the current environment\r\nexport function getHost() {\r\n  return process.env[`${getStub()}_HOST`] || defaultHost;\r\n}\r\n\r\n// Get the server host -- based on the current environment\r\nexport function getServerHost() {\r\n  return process.env[`${getServerStub()}_HOST`] || defaultHost;\r\n}\r\n\r\n// Get the browser host -- based on the current environment\r\nexport function getBrowserHost() {\r\n  return process.env[`${getBrowserStub()}_HOST`] || defaultHost;\r\n}\r\n\r\n// Get the port, based on the current environment\r\nexport function getPort() {\r\n  const port = process.env[`${getStub()}_PORT`];\r\n  if (port) return port;\r\n\r\n  // No clue from the environment -- work it out ourselves\r\n  return defaultPorts[process.env.NODE_ENV][isServer ? 'server' : 'browser'];\r\n}\r\n\r\n// Get the browser port, based on the current environment\r\nexport function getBrowserPort() {\r\n  const port = process.env[`${getBrowserStub()}_PORT`];\r\n  if (port) return port;\r\n\r\n  // No clue from the environment -- work it out ourselves\r\n  return defaultPorts[process.env.NODE_ENV].browser;\r\n}\r\n\r\n// Get the server port, based on the current environment\r\nexport function getServerPort() {\r\n  const port = process.env[`${getServerStub()}_PORT`];\r\n  if (port) return port;\r\n\r\n  // No clue from the environment -- work it out ourselves\r\n  return defaultPorts[process.env.NODE_ENV].server;\r\n}\r\n\r\n// Get the protocol://host:port of where the current server would bind\r\nexport function getURL() {\r\n  return `http://${getHost()}:${getPort()}`;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/env.js","/* eslint-disable no-underscore-dangle */\r\n\r\n/*\r\nCustom Redux store creation.  Instead of using the default Apollo store,\r\nwe'll create our own for each request so that we can easily layer in our\r\nown reducers for store state outside of Apollo\r\n*/\r\n\r\n// ----------------------\r\n// IMPORTS\r\n\r\n/* NPM */\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport Immutable from 'seamless-immutable';\r\n\r\n/* Local */\r\n\r\n// Reducers -- CHANGE THIS TO REFLECT YOUR OWN REDUCERS!\r\nimport counterReducer from 'reducers/counter';\r\n\r\n// ----------------------\r\n\r\n// Detect if we're both in the browser, AND we have dehydrated state\r\nconst hasState = !!(!SERVER && window.__STATE__);\r\n\r\n// All reducers, in one array -- CHANGE THIS TO REFLECT YOUR OWN REDUCERS!\r\nconst reducers = [counterReducer];\r\n\r\n// Helper function that 'unwinds' the { reducerKey {state, reducer} } format\r\n// from each imported reducer, and either returns the `reducer` function (if\r\n// true) or the `state`, as an Immutable collection or the default state\r\nfunction unwind(reducer = true) {\r\n  // Get the combined reducers `reducer` or `state` object\r\n  const r = Object.assign({},\r\n    ...[].concat(...reducers.map(arr => Object.keys(arr).map(\r\n      key => ({\r\n        [key]: arr[key][reducer ? 'reducer' : 'state'],\r\n      }),\r\n    ))),\r\n  );\r\n\r\n  // If this is a reducer, return at this point\r\n  if (reducer) return r;\r\n\r\n  // We're looking for the state -- so let's map it\r\n  return Object.assign({}, ...Object.keys(r).map(key => ({\r\n    [key]: (hasState && Immutable(window.__STATE__[key])) || r[key],\r\n  })));\r\n}\r\n\r\nexport default function createNewStore(apolloClient) {\r\n  const store = createStore(\r\n    // By default, we'll use just the apollo reducer.  We can easily add our\r\n    // own here, for global store management outside of Apollo\r\n    combineReducers({\r\n      apollo: apolloClient.reducer(),\r\n      ...unwind(),\r\n    }),\r\n    // Initial server state, provided by the server.\r\n    {\r\n      apollo: (hasState && window.__STATE__.apollo) || {},\r\n      ...unwind(false),\r\n    },\r\n    compose(\r\n        applyMiddleware(\r\n          apolloClient.middleware(),\r\n          thunkMiddleware,\r\n        ),\r\n        // Enable Redux Devtools on the browser, for easy state debugging\r\n        // eslint-disable-next-line no-underscore-dangle\r\n        (!SERVER && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined') ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\r\n    ),\r\n  );\r\n\r\n  return store;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/redux.js","/* eslint-disable react/no-danger, no-return-assign, no-param-reassign */\r\n\r\n// Component to render the full HTML response in React\r\n\r\n// ----------------------\r\n// IMPORTS\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// ----------------------\r\n\r\nconst Html = ({ head, html, scripts, window, css }) => (\r\n  <html lang=\"en\" prefix=\"og: http://ogp.me/ns#\">\r\n    <head>\r\n      <meta charSet=\"utf-8\" />\r\n      <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n      <meta httpEquiv=\"Content-Language\" content=\"en\" />\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n      {head.meta.toComponent()}\r\n      <link rel=\"stylesheet\" href={css} />\r\n      {head.title.toComponent()}\r\n    </head>\r\n    <body>\r\n      <div\r\n        id=\"main\"\r\n        dangerouslySetInnerHTML={{ __html: html }} />\r\n      <script\r\n        dangerouslySetInnerHTML={{\r\n          __html: Object.keys(window).reduce(\r\n            (out, key) => out += `window.${key}=${JSON.stringify(window[key])};`,\r\n          ''),\r\n        }} />\r\n      {scripts.map(src => <script key={src} src={src} />)}\r\n    </body>\r\n  </html>\r\n);\r\n\r\nHtml.propTypes = {\r\n  head: PropTypes.object.isRequired,\r\n  html: PropTypes.string.isRequired,\r\n  window: PropTypes.object.isRequired,\r\n  scripts: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  css: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Html;\r\n\n\n\n// WEBPACK FOOTER //\n// ./kit/views/ssr.js","// Sample reducer, showing how you can 'listen' to the `INCREMENT_COUNTER`\r\n// action, and update the counter state\r\n\r\n// ----------------------\r\n// IMPORTS\r\n\r\n/* NPM */\r\nimport Immutable from 'seamless-immutable';\r\n\r\n// ----------------------\r\n\r\n// Set the initial `counter.count` to 0.\r\n//\r\n// Technically, we don't need to use `Immutable()` at all in this very simple\r\n// example -- it could just be a plain integer, if we want.  But wrapping it in\r\n// a call to `Immutable()` makes it impossible for us to accidentally change\r\n// this outside of Redux, which is a good pattern to enforce\r\nconst initialState = Immutable({\r\n  count: 0,\r\n});\r\n\r\nexport default {\r\n\r\n  // The shape that our Redux handler in `kit/lib/redux` expects is\r\n  // { stateKey: { state, reducer() } } -- the `stateKey` is where in the `state`\r\n  // object starts looking, `state` is the initial state, and `reducer()` is the\r\n  // function that handles the 'listening' to Redux to know how to manipulate state\r\n  counter: {\r\n    state: initialState,\r\n    reducer(state = initialState, action) {\r\n      if (action.type === 'INCREMENT_COUNTER') {\r\n        return state.merge({\r\n          count: state.count + 1,\r\n        });\r\n      }\r\n      return state;\r\n    },\r\n  },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./reducers/counter.js","module.exports = require(\"boxen\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"boxen\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"ip\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ip\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"isomorphic-fetch\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"isomorphic-fetch\"\n// module id = 17\n// module chunks = 0","module.exports = require(\"koa\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa\"\n// module id = 18\n// module chunks = 0","module.exports = require(\"koa-helmet\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-helmet\"\n// module id = 19\n// module chunks = 0","module.exports = require(\"koa-router\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-router\"\n// module id = 20\n// module chunks = 0","module.exports = require(\"koa-send\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-send\"\n// module id = 21\n// module chunks = 0","module.exports = require(\"microseconds\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"microseconds\"\n// module id = 22\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 23\n// module chunks = 0","module.exports = require(\"prop-types\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prop-types\"\n// module id = 24\n// module chunks = 0","module.exports = require(\"react-dom/server\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-dom/server\"\n// module id = 25\n// module chunks = 0","module.exports = require(\"react-helmet\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-helmet\"\n// module id = 26\n// module chunks = 0","module.exports = require(\"react-router\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-router\"\n// module id = 27\n// module chunks = 0","module.exports = require(\"redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux\"\n// module id = 28\n// module chunks = 0","module.exports = require(\"redux-thunk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux-thunk\"\n// module id = 29\n// module chunks = 0"],"sourceRoot":""}